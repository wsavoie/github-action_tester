# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel

jobs:
    
  testJob:
    name: Test
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{steps.package.outputs.matrix}}

    steps:
      - uses: actions/checkout@v3
      
      - name: install json2yml
        run: |
          sudo npm install -g json2yaml
          
      - name: Read package.json
        id: package
        uses: juliangruber/read-file-action@v1
        with:
          path: ./test.json
      - name: Echo test.json
        run: |
          json='${{ steps.package.outputs.content }}'
          echo $json
          #matrix=$json | json2yaml
          #echo $matrix
          echo "::set-output name=matrix::$( echo '$json' )"
          m=${{ fromJSON($json) }}
    strategy: 
      matrix: $m
  #setMatrix:
  #  name: BuildMatrix
  #  needs: testJob
  #  runs-on: ubuntu-latest
  #  strategy:
  #   matrix:  ${{ fromJSON(needs.testJob.outputs.matrix) }}
  # steps:
  # - run: echo ${{ matrix.CUDA }}
    
    
        
      #- id: set_var
      #  run: |
      #    content1= `ls`
      #    echo "$content1"
      #- run: |
      #    content=`cat .test.json`
      #    # the following lines are only required for multi line json
      #    content="${content//'%'/'%25'}"
      #    content="${content//$'\n'/'%0A'}"
      #    content="${content//$'\r'/'%0D'}"
      #    # end of optional handling for multi line json
      #    echo "::set-output name=packageJson::$content"
      #- run: |
      #    echo "${{fromJson(steps.set_var.outputs.packageJson).IMAGE_OS}}"
