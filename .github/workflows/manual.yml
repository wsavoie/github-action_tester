# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel

jobs:
  # This workflow contains a single job called "greet"
  greet:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    - name: Send greeting
      run: echo "Hello ${{ github.event.inputs.name }}"
      
  testJob:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      
      - name: install json2yml
        run: |
          sudo npm install -g json2yaml
          
      - name: Read package.json
        id: package
        uses: juliangruber/read-file-action@v1
        with:
          path: ./test.json
      - name: Echo test.json
        run: |
          matrix="${{ steps.package.outputs.content }}"
          echo $matrix
          echo $matrix | jq .
          echo $matrix | json2yaml     
      
      #- id: set_var
      #  run: |
      #    content1= `ls`
      #    echo "$content1"
      #- run: |
      #    content=`cat .test.json`
      #    # the following lines are only required for multi line json
      #    content="${content//'%'/'%25'}"
      #    content="${content//$'\n'/'%0A'}"
      #    content="${content//$'\r'/'%0D'}"
      #    # end of optional handling for multi line json
      #    echo "::set-output name=packageJson::$content"
      #- run: |
      #    echo "${{fromJson(steps.set_var.outputs.packageJson).IMAGE_OS}}"
